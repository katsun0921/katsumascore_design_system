---
globs: *.stories.tsx,*.stories.ts,*.stories.mdx
description: Storybookストーリー開発ガイドラインとパターン
---

# Storybook開発ガイドライン

## ストーリーファイル構造

### ストーリー命名
- ファイル: `ComponentName.stories.tsx`
- 場所: コンポーネントと同じディレクトリ
- 例: [src/stories/components/Button/Button.stories.tsx](mdc:src/stories/components/Button/Button.stories.tsx)

### ストリーテンプレート構造
```tsx
import React from 'react';
import { ComponentStory, ComponentMeta } from '@storybook/react';
import { ComponentName } from './ComponentName';

export default {
  title: 'Components/ComponentName',
  component: ComponentName,
  argTypes: {
    // インタラクティブテスト用のコントロールを定義
    backgroundColor: { control: 'color' },
    size: {
      control: { type: 'select' },
      options: ['small', 'medium', 'large']
    },
  },
} as ComponentMeta<typeof ComponentName>;

const Template: ComponentStory<typeof ComponentName> = (args) => <ComponentName {...args} />;

export const Default = Template.bind({});
Default.args = {
  // デフォルトプロパティ
};

export const Primary = Template.bind({});
Primary.args = {
  primary: true,
  label: 'Primary Button',
};
```

## ストーリーカテゴリー

### コンポーネントストーリー
- 場所: [src/stories/components/](mdc:src/stories/components/)
- パターン: `Component/ComponentName`
- 例: Button, Heading, Category, など

### レイアウトストーリー
- 場所: [src/stories/layouts/](mdc:src/stories/layouts/)
- パターン: `Layout/LayoutName`
- 例: Header, Footer, Navigation, など

### プロジェクトストーリー
- 場所: [src/stories/projects/](mdc:src/stories/projects/)
- パターン: `Project/ProjectName`
- 例: Content, Info, Post, Summary, など

### スタイルストーリー
- 場所: [src/stories/styles/](mdc:src/stories/styles/)
- パターン: `Style/StyleName`
- 例: Foundation, Global, など

## ArgTypes設定

### 一般的なコントロール
```tsx
argTypes: {
  // カラーピッカー
  backgroundColor: { control: 'color' },
  color: { control: 'color' },

  // セレクトドロップダウン
  size: {
    control: { type: 'select' },
    options: ['small', 'medium', 'large']
  },

  // ブール値トグル
  primary: { control: 'boolean' },
  disabled: { control: 'boolean' },

  // テキスト入力
  label: { control: 'text' },

  // 数値入力
  width: { control: 'number' },
  height: { control: 'number' },

  // レンジスライダー
  opacity: {
    control: { type: 'range', min: 0, max: 1, step: 0.1 }
  },
}
```

## ストーリーバリエーション

### 標準バリエーション
```tsx
// デフォルト状態
export const Default = Template.bind({});
Default.args = {
  label: 'Button',
};

// プライマリバリエーション
export const Primary = Template.bind({});
Primary.args = {
  primary: true,
  label: 'Primary Button',
};

// セカンダリバリエーション
export const Secondary = Template.bind({});
Secondary.args = {
  label: 'Secondary Button',
};

// サイズバリエーション
export const Large = Template.bind({});
Large.args = {
  size: 'large',
  label: 'Large Button',
};

export const Small = Template.bind({});
Small.args = {
  size: 'small',
  label: 'Small Button',
};
```

### インタラクティブストーリー
```tsx
// クリックアクション付き
export const WithClick = Template.bind({});
WithClick.args = {
  label: 'Click Me',
  onClick: () => alert('Button clicked!'),
};

// カスタムスタイリング付き
export const CustomStyle = Template.bind({});
CustomStyle.args = {
  label: 'Custom Button',
  style: {
    backgroundColor: '#ff6b6b',
    color: 'white',
    borderRadius: '20px'
  },
};
```

## ドキュメントストーリー

### イントロダクションストーリー
- ファイル: [src/stories/Introduction.stories.mdx](mdc:src/stories/Introduction.stories.mdx)
- 目的: プロジェクト概要とスタートガイド

### ページストーリー
- ファイル: [src/stories/Page.stories.tsx](mdc:src/stories/Page.stories.tsx)
- 目的: フルページレイアウト例

## ストーリー組織

### ストーリーグループ化
```tsx
export default {
  title: 'Design System/Components/Button',
  component: Button,
  // ... その他の設定
};
```

### ストーリーパラメータ
```tsx
export const WithParameters = Template.bind({});
WithParameters.args = {
  label: 'Button with Parameters',
};
WithParameters.parameters = {
  docs: {
    description: {
      story: 'このボタンはカスタムパラメータを示しています。',
    },
  },
};
```

## ベストプラクティス

### ストーリー命名
- 説明的な名前を使用: `Primary`, `Secondary`, `Large`, `Small`
- インタラクティブストーリーにはアクションベースの名前: `WithClick`, `WithHover`
- 状態ベースの名前: `Loading`, `Disabled`, `Error`

### ドキュメント
- コンポーネントプロパティにJSDocコメントを追加
- 追加ドキュメントにストーリーパラメータを使用
- ストーリー説明に使用例を含める

### パフォーマンス
- ストーリーを集中して軽量に保つ
- 各ストーリーバリエーションに最小限のプロパティを使用
- ストーリー引数で複雑なデータ構造を避ける

## 参考例

### コンポーネントストーリー
- Button: [src/stories/components/Button/Button.stories.tsx](mdc:src/stories/components/Button/Button.stories.tsx)
- Heading: [src/stories/components/Heading/Heading.stories.tsx](mdc:src/stories/components/Heading/Heading.stories.tsx)

### レイアウトストーリー
- Header: [src/stories/layouts/Header/](mdc:src/stories/layouts/Header/)
- Footer: [src/stories/layouts/Footer/](mdc:src/stories/layouts/Footer/)

### プロジェクトストーリー
- Post: [src/stories/projects/Post/](mdc:src/stories/projects/Post/)
- Content: [src/stories/projects/Content/](mdc:src/stories/projects/Content/)
